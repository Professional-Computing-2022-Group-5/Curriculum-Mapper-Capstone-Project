{"ast":null,"code":"import _objectSpread from \"/Users/gbbowen/Documents/GitHub/Curriculum-Mapper-Capstone-Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/gbbowen/Documents/GitHub/Curriculum-Mapper-Capstone-Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gbbowen/Documents/GitHub/Curriculum-Mapper-Capstone-Project/client/src/templates/graphComponent.jsx\";\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'; //import {NodeUpdate} from \"./nodeCrud.js\";\n\nimport { NodeCreate } from \"./nodeCrud.js\"; //import {LinkUpdate} from \"./linkCrud.js\";\n\nimport { LinkCreate } from \"./linkCrud.js\";\nvar currentId;\n\nvar GraphComponent = function GraphComponent(_ref) {\n  var data = _ref.data;\n\n  function searchforNode(searchId) {\n    for (var i = 0; i < data.nodes.length; i++) {\n      if (data.nodes[i].id === searchId) {\n        return data.nodes[i];\n      }\n    }\n  }\n\n  function searchforLink(searchId) {\n    for (var j = 0; j < data.links.length; j++) {\n      console.log(\"LOOKING AT LINK INDEX\" + j);\n\n      if (data.links[j].property.id === searchId) {\n        console.log(\"in IF\" + data.links[j].property.id);\n        return data.links[j];\n      }\n    }\n  }\n\n  var _useState = useState(\"none\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      filterActive = _useState2[0],\n      setFilterActive = _useState2[1]; //const [currentId, setCurrentId] = useState(0)\n  //const [receivedData, setReceivedData] = useState(\"noData\")\n\n\n  console.log(\"DID IT WORK\");\n  console.log(data);\n  var forceRef = useRef(null);\n  useEffect(function () {\n    forceRef.current.d3Force(\"charge\").strength(-400);\n  }); //let responseData;\n\n  /*\n      httpClient.post(\"//localhost:5000/query\", {query})\n          .then(function (response) {\n              console.log(\"REAPOSNED FUNCTION\");\n              console.log(response.data);\n              responseData = JSON.parse(JSON.stringify(response.data))\n              setReceivedData(\"haveData\");\n          })\n          .catch(function (error) {\n              if (error.response.status === 401) {\n                  alert(\"Invalid Query\");\n              }\n          });\n  \n      //function callPost(){\n         // httpClient.post(\"//localhost:5000/query\", {query})\n          //    .then(function (response) {\n          //        console.log(\"REAPOSNED FUNCTION\");\n                  //console.log(response.data);\n                  //responseData = JSON.parse(JSON.stringify(response.data))\n                  //receivedData.data = JSON.parse(JSON.stringify(response.data))\n  //\n           //       setGotData(JSON.parse(JSON.stringify(response.data)))\n  \n           //       console.log(\"setGotData\")\n           //       console.log(gotData)\n              \n           //       setReceivedData(\"haveData\");\n           //   })\n           //   .catch(function (error) {\n           //       if (error.response.status === 401) {\n           //           alert(\"Invalid Query\");\n           //       }\n           //   });\n        //  }\n  \n        const executeQuery = async (query) => {\n          console.log(query);\n          \n          try {\n              const dbData = await httpClient.post(\"//localhost:5000/query\", {\n                  query\n              });\n              setGotData(JSON.parse(JSON.stringify(dbData.data)))\n              console.log(gotData)\n  \n          } catch (error) {\n              if (error.response.status === 401) {\n                  alert(\"Invalid Query\");\n              }\n          } finally {\n          console.log(\"IN FINALLY\")\n          setReceivedData(\"haveData\");\n      }\n      };\n  \n      const executeQuery = async (query) => {\n          try {\n              var dbData = await httpClient.post(\"//localhost:5000/query\", {\n                  query\n              });\n              setGotData(JSON.parse(JSON.stringify(dbData.data)))\n              console.log(gotData)\n              if (dbData != undefined){\n                  console.log(\"IN FINALLY - HAVE DATA\")\n                  setReceivedData(\"haveData\");\n              }\n  \n          } catch (error) {\n              if (error.response.status === 401) {\n                  alert(\"Invalid Query\");\n              }\n          } \n      };\n  \n  \n     //const query = props.query\n      //if (receivedData != \"haveData\" && gotData == undefined){\n      //    console.log(\"IN IF STATEMENT\")\n      //    callPost()\n  \n      executeQuery()\n  \n      function getDataPost(){\n       var response;\n      useEffect(() => {(async () => {\n          try {\n              const resp = await httpClient.post(\"//localhost:5000/query\", {\n                      query\n              });\n              \n              console.log(resp.data)\n                  const returnData = {\"links\":[\n                      {\"property\":{\"deleted\":false,\"id\":241,\"type\":\"relationship\"},\"source\":183,\"target\":292},\n                      {\"property\":{\"deleted\":false,\"id\":238,\"type\":\"relationship\"},\"source\":183,\"target\":289},\n                      {\"property\":{\"deleted\":false,\"id\":240,\"type\":\"relationship\"},\"source\":183,\"target\":291}],\n                  \"nodes\":\n                      [{\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                      {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                      {\"deleted\":false,\"describe\":\"present and defend opinions by making judgments about information. validity of ideas, or quality of work based on a set of criteria.\",\"id\":292,\"level\":\"IV.Analyzing\",\"outcome\":\"(5) communicate effectively with stakeholders.\",\"outcomeId\":\"5\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                      {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                      {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                      {\"deleted\":false,\"describe\":\"Exhibit memory of previously learned material by recalling facts, terms,basic concepts, and answers.\",\"id\":289,\"level\":\"I.Remembering\",\"outcome\":\"(2) select appropriate data visualisation options; \",\"outcomeId\":\"2\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                      {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                      {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                      {\"deleted\":false,\"describe\":\"Present and defend opinions by making judgments about information, validity of ideas, or quality of work based on a set of criteria.\",\"id\":291,\"level\":\"V. Evaluating\",\"outcome\":\"(4) critically assess the outcomes of a data analysis; \",\"outcomeId\":\"4\",\"type\":\"node\",\"unitCode\":\"CITS4009\"}]\n                  }\n                  response = JSON.parse(JSON.stringify(resp.data))\n                  console.log(response)\n      \n              } finally {\n                  console.log(\"IN FINALLY\")\n                  console.log(response)\n                  setReceivedData(\"haveData\");\n              }\n          })();\n          }, []);\n          if (response != \"undefined\"){\n  \n              return response;\n          }\n          console.log(\"AFTER TRY FINALLY\")\n          console.log(response)\n      }\n  \n  \n      //const data = props.data\n      //console.log(data)\n      //console.log(typeof(data))\n  \n      //getDataPost(query);\n      //console.log(\"AFTER PSOT CASS\")\n      //console.log(responseData)\n      //console.log(\"HOHOHO PSOT CASS\")\n      \n  \n  /*\n      const getData = async () => {\n          const dbData = await httpClient.post(\"//localhost:5000/query\", props.query);\n  \n          console.log(dbData.data)\n          console.log(dbData.data)\n  \n          \n          const returnData = {\"links\":[\n              {\"property\":{\"deleted\":false,\"id\":241,\"type\":\"relationship\"},\"source\":183,\"target\":292},\n              {\"property\":{\"deleted\":false,\"id\":238,\"type\":\"relationship\"},\"source\":183,\"target\":289},\n              {\"property\":{\"deleted\":false,\"id\":240,\"type\":\"relationship\"},\"source\":183,\"target\":291}],\n          \"nodes\":\n              [{\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n              {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n              {\"deleted\":false,\"describe\":\"present and defend opinions by making judgments about information. validity of ideas, or quality of work based on a set of criteria.\",\"id\":292,\"level\":\"IV.Analyzing\",\"outcome\":\"(5) communicate effectively with stakeholders.\",\"outcomeId\":\"5\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n              {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n              {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n              {\"deleted\":false,\"describe\":\"Exhibit memory of previously learned material by recalling facts, terms,basic concepts, and answers.\",\"id\":289,\"level\":\"I.Remembering\",\"outcome\":\"(2) select appropriate data visualisation options; \",\"outcomeId\":\"2\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n              {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n              {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n              {\"deleted\":false,\"describe\":\"Present and defend opinions by making judgments about information, validity of ideas, or quality of work based on a set of criteria.\",\"id\":291,\"level\":\"V. Evaluating\",\"outcome\":\"(4) critically assess the outcomes of a data analysis; \",\"outcomeId\":\"4\",\"type\":\"node\",\"unitCode\":\"CITS4009\"}]\n          }\n  \n          //data = JSON.parse(JSON.stringify(returnData));\n          //console.log(\"__DEDWC_++\")\n          //console.log(typeof(data.nodes))\n          //console.log(data.nodes)\n  \n          return (\n              {\"links\":[\n                  {\"property\":{\"deleted\":false,\"id\":241,\"type\":\"relationship\"},\"source\":183,\"target\":292},\n                  {\"property\":{\"deleted\":false,\"id\":238,\"type\":\"relationship\"},\"source\":183,\"target\":289},\n                  {\"property\":{\"deleted\":false,\"id\":240,\"type\":\"relationship\"},\"source\":183,\"target\":291}],\n              \"nodes\":\n                  [{\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                  {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                  {\"deleted\":false,\"describe\":\"present and defend opinions by making judgments about information. validity of ideas, or quality of work based on a set of criteria.\",\"id\":292,\"level\":\"IV.Analyzing\",\"outcome\":\"(5) communicate effectively with stakeholders.\",\"outcomeId\":\"5\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                  {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                  {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                  {\"deleted\":false,\"describe\":\"Exhibit memory of previously learned material by recalling facts, terms,basic concepts, and answers.\",\"id\":289,\"level\":\"I.Remembering\",\"outcome\":\"(2) select appropriate data visualisation options; \",\"outcomeId\":\"2\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                  {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                  {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                  {\"deleted\":false,\"describe\":\"Present and defend opinions by making judgments about information, validity of ideas, or quality of work based on a set of criteria.\",\"id\":291,\"level\":\"V. Evaluating\",\"outcome\":\"(4) critically assess the outcomes of a data analysis; \",\"outcomeId\":\"4\",\"type\":\"node\",\"unitCode\":\"CITS4009\"}]\n              })\n          } \n  */\n\n  var NodeRead = function NodeRead() {\n    console.log(data.nodes);\n    console.log(data.nodes.length);\n    console.log(data.nodes[0].id);\n    var unitnode = searchforNode(currentId);\n    console.log(unitnode); //for \n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, \"NODE READ\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, unitnode.unitCode), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, unitnode.avaliabilities), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick(n) {\n        return setFilterActive(\"NodeUpdate\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, \"Delete\"));\n  };\n\n  var NodeUpdate = function NodeUpdate() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, \"UPDATE\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, \"Node Delete\"));\n  };\n\n  var LinkRead = function LinkRead() {\n    console.log(data.links);\n    console.log(\"1111\" + currentId);\n    console.log(data.links[0].property.id);\n    var unitlink = searchforLink(currentId);\n    console.log(\"got it:\");\n    console.log(unitlink);\n    console.log(\"got it link id:\");\n    console.log(unitlink.property.id);\n    console.log(\"got it source id:\");\n    console.log(unitlink.source.id);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, \"LINK READ\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, \"Link Id: \", unitlink.property.id), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }, \"Source Unit Code: \", unitlink.source.unitCode), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }, \"Target Unit Code: \", unitlink.target.unitCode), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick(n) {\n        return setFilterActive(\"LinkUpdate\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }, \"Delete\"));\n  };\n\n  function sendLinkUpdate(source, target) {\n    console.log(\"source\");\n    console.log(source);\n    console.log(\"target\");\n    console.log(target);\n  }\n\n  function deleteLink(id) {\n    console.log(\"please delete\");\n    console.log(id);\n  }\n\n  var LinkUpdate = function LinkUpdate() {\n    var unitlink = searchforLink(currentId);\n\n    var _useState3 = useState(unitlink.source),\n        _useState4 = _slicedToArray(_useState3, 2),\n        sourceDetails = _useState4[0],\n        setSourceDetails = _useState4[1];\n\n    var _useState5 = useState(unitlink.target),\n        _useState6 = _slicedToArray(_useState5, 2),\n        targetDetails = _useState6[0],\n        setTargetDetails = _useState6[1];\n\n    console.log(\"sourceDetails\");\n    console.log(sourceDetails);\n    console.log(\"targetDetails\");\n    console.log(targetDetails); //console.log(linkDetails)\n    //function updateInput(value){\n    //   console.log(linkDetails)\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, \"LINK UPDATE\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, \"source id:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: sourceDetails.id,\n      onChange: function onChange(e) {\n        return setSourceDetails(_objectSpread({}, sourceDetails, {\n          id: e.target.value\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: sendLinkUpdate(sourceDetails, targetDetails),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Delete\",\n      onClick: deleteLink(currentId),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var Create = function Create() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }\n    }, \"CREATE\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick(n) {\n        return setFilterActive(\"NodeCreate\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, \"Create Node\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick(n) {\n        return setFilterActive(\"LinkCreate\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }\n    }, \"Create Link\"));\n  };\n\n  function handleNodeClick(node) {\n    console.log(node.id);\n    console.log(typeof node.id);\n    console.log(data.nodes.length); //setFilterActive({ ...filterActive, state:\"NodeRead\",id: node.id });\n\n    currentId = node.id;\n    setFilterActive(\"NodeRead\");\n  }\n\n  function handleLinkClick(link) {\n    console.log(\"clicked on:\" + link);\n    console.log(typeof link.property.id);\n    console.log(data.links.length); //setFilterActive({ ...filterActive, state:\"NodeRead\",id: node.id });\n\n    currentId = link.property.id;\n    console.log(\"current currentid = \" + link.property.id);\n    setFilterActive(\"LinkRead\");\n  }\n\n  function handleBackgroundClick(item) {\n    setFilterActive(\"Create\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }, filterActive === \"NodeRead\" && /*#__PURE__*/React.createElement(NodeRead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 41\n    }\n  }), filterActive === \"LinkRead\" && /*#__PURE__*/React.createElement(LinkRead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 41\n    }\n  }), filterActive === \"Create\" && /*#__PURE__*/React.createElement(Create, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 39\n    }\n  }), filterActive === \"NodeUpdate\" && /*#__PURE__*/React.createElement(NodeUpdate, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 44\n    }\n  }), filterActive === \"NodeCreate\" && /*#__PURE__*/React.createElement(NodeCreate, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 44\n    }\n  }), filterActive === \"LinkUpdate\" && /*#__PURE__*/React.createElement(LinkUpdate, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 44\n    }\n  }), filterActive === \"LinkCreate\" && /*#__PURE__*/React.createElement(LinkCreate, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(ForceGraph2D, {\n    graphData: data,\n    width: window.innerWidth * 0.6,\n    height: window.innerHeight * 0.8,\n    backgroundColor: \"grey\",\n    onNodeDragEnd: function onNodeDragEnd(node) {\n      node.fx = node.x;\n      node.fy = node.y;\n      node.fz = node.z;\n    },\n    cooldownTicks: 100,\n    onEngineStop: function onEngineStop() {\n      return forceRef.current.zoomToFit(400);\n    } //nodeLabel={n => nodeHoverFunc(n)}\n    ,\n    onNodeClick: function onNodeClick(node) {\n      return handleNodeClick(node);\n    },\n    onLinkClick: function onLinkClick(link) {\n      return handleLinkClick(link);\n    },\n    onBackgroundClick: function onBackgroundClick(i) {\n      return handleBackgroundClick(i);\n    } //onNodeRightClick={()=> setActive(\"NodeUpdate\")}\n    //onLinkClick={()=> setActive(\"LinkRead\")}\n    //onLinkRightClick={()=> setActive(\"LinkUpdate\")}\n    //onBackgroundClick={b => backgroundClickFunc(b)}\n    ,\n    linkCurvature: \"curvature\",\n    enablePointerInteraction: true,\n    linkDirectionalParticleWidth: 1,\n    ref: forceRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default GraphComponent; //{receivedData === \"haveData\" && <AddGraph inputs = {gotData}/>}","map":{"version":3,"names":["React","useRef","useEffect","useState","ForceGraph2D","Button","Form","NodeCreate","LinkCreate","currentId","GraphComponent","data","searchforNode","searchId","i","nodes","length","id","searchforLink","j","links","console","log","property","filterActive","setFilterActive","forceRef","current","d3Force","strength","NodeRead","unitnode","unitCode","avaliabilities","n","NodeUpdate","LinkRead","unitlink","source","target","sendLinkUpdate","deleteLink","LinkUpdate","sourceDetails","setSourceDetails","targetDetails","setTargetDetails","e","value","Create","handleNodeClick","node","handleLinkClick","link","handleBackgroundClick","item","window","innerWidth","innerHeight","fx","x","fy","y","fz","z","zoomToFit"],"sources":["/Users/gbbowen/Documents/GitHub/Curriculum-Mapper-Capstone-Project/client/src/templates/graphComponent.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, } from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n//import {NodeUpdate} from \"./nodeCrud.js\";\nimport {NodeCreate} from \"./nodeCrud.js\";\n\n//import {LinkUpdate} from \"./linkCrud.js\";\nimport {LinkCreate} from \"./linkCrud.js\";\n\nvar currentId;\n\nconst GraphComponent = ({data}) => {\n\n    function searchforNode(searchId){\n                for(var i=0; i<data.nodes.length; i++) {\n                    if(data.nodes[i].id === searchId) {\n                        return data.nodes[i];\n                    }\n                    }\n    }\n\n\n    function searchforLink(searchId){\n        for(var j=0; j<data.links.length; j++) {\n            console.log(\"LOOKING AT LINK INDEX\" + j)\n            if(data.links[j].property.id === searchId) {\n                console.log(\"in IF\" + data.links[j].property.id)\n                return data.links[j];\n            }\n            }\n    }\n\n\n    const [filterActive, setFilterActive] = useState(\"none\")\n    //const [currentId, setCurrentId] = useState(0)\n    //const [receivedData, setReceivedData] = useState(\"noData\")\n    \n    console.log(\"DID IT WORK\")\n    console.log(data)\n\n    const forceRef = useRef(null);\n\n    useEffect(() => {\n        forceRef.current.d3Force(\"charge\").strength(-400);\n    });\n    \n\n    //let responseData;\n/*\n    httpClient.post(\"//localhost:5000/query\", {query})\n        .then(function (response) {\n            console.log(\"REAPOSNED FUNCTION\");\n            console.log(response.data);\n            responseData = JSON.parse(JSON.stringify(response.data))\n            setReceivedData(\"haveData\");\n        })\n        .catch(function (error) {\n            if (error.response.status === 401) {\n                alert(\"Invalid Query\");\n            }\n        });\n\n    //function callPost(){\n       // httpClient.post(\"//localhost:5000/query\", {query})\n        //    .then(function (response) {\n        //        console.log(\"REAPOSNED FUNCTION\");\n                //console.log(response.data);\n                //responseData = JSON.parse(JSON.stringify(response.data))\n                //receivedData.data = JSON.parse(JSON.stringify(response.data))\n//\n         //       setGotData(JSON.parse(JSON.stringify(response.data)))\n\n         //       console.log(\"setGotData\")\n         //       console.log(gotData)\n            \n         //       setReceivedData(\"haveData\");\n         //   })\n         //   .catch(function (error) {\n         //       if (error.response.status === 401) {\n         //           alert(\"Invalid Query\");\n         //       }\n         //   });\n      //  }\n\n      const executeQuery = async (query) => {\n        console.log(query);\n        \n        try {\n            const dbData = await httpClient.post(\"//localhost:5000/query\", {\n                query\n            });\n            setGotData(JSON.parse(JSON.stringify(dbData.data)))\n            console.log(gotData)\n\n        } catch (error) {\n            if (error.response.status === 401) {\n                alert(\"Invalid Query\");\n            }\n        } finally {\n        console.log(\"IN FINALLY\")\n        setReceivedData(\"haveData\");\n    }\n    };\n\n    const executeQuery = async (query) => {\n        try {\n            var dbData = await httpClient.post(\"//localhost:5000/query\", {\n                query\n            });\n            setGotData(JSON.parse(JSON.stringify(dbData.data)))\n            console.log(gotData)\n            if (dbData != undefined){\n                console.log(\"IN FINALLY - HAVE DATA\")\n                setReceivedData(\"haveData\");\n            }\n\n        } catch (error) {\n            if (error.response.status === 401) {\n                alert(\"Invalid Query\");\n            }\n        } \n    };\n\n\n   //const query = props.query\n    //if (receivedData != \"haveData\" && gotData == undefined){\n    //    console.log(\"IN IF STATEMENT\")\n    //    callPost()\n\n    executeQuery()\n\n    function getDataPost(){\n     var response;\n    useEffect(() => {(async () => {\n        try {\n            const resp = await httpClient.post(\"//localhost:5000/query\", {\n                    query\n            });\n            \n            console.log(resp.data)\n                const returnData = {\"links\":[\n                    {\"property\":{\"deleted\":false,\"id\":241,\"type\":\"relationship\"},\"source\":183,\"target\":292},\n                    {\"property\":{\"deleted\":false,\"id\":238,\"type\":\"relationship\"},\"source\":183,\"target\":289},\n                    {\"property\":{\"deleted\":false,\"id\":240,\"type\":\"relationship\"},\"source\":183,\"target\":291}],\n                \"nodes\":\n                    [{\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                    {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                    {\"deleted\":false,\"describe\":\"present and defend opinions by making judgments about information. validity of ideas, or quality of work based on a set of criteria.\",\"id\":292,\"level\":\"IV.Analyzing\",\"outcome\":\"(5) communicate effectively with stakeholders.\",\"outcomeId\":\"5\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                    {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                    {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                    {\"deleted\":false,\"describe\":\"Exhibit memory of previously learned material by recalling facts, terms,basic concepts, and answers.\",\"id\":289,\"level\":\"I.Remembering\",\"outcome\":\"(2) select appropriate data visualisation options; \",\"outcomeId\":\"2\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                    {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                    {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                    {\"deleted\":false,\"describe\":\"Present and defend opinions by making judgments about information, validity of ideas, or quality of work based on a set of criteria.\",\"id\":291,\"level\":\"V. Evaluating\",\"outcome\":\"(4) critically assess the outcomes of a data analysis; \",\"outcomeId\":\"4\",\"type\":\"node\",\"unitCode\":\"CITS4009\"}]\n                }\n                response = JSON.parse(JSON.stringify(resp.data))\n                console.log(response)\n    \n            } finally {\n                console.log(\"IN FINALLY\")\n                console.log(response)\n                setReceivedData(\"haveData\");\n            }\n        })();\n        }, []);\n        if (response != \"undefined\"){\n\n            return response;\n        }\n        console.log(\"AFTER TRY FINALLY\")\n        console.log(response)\n    }\n\n\n    //const data = props.data\n    //console.log(data)\n    //console.log(typeof(data))\n\n    //getDataPost(query);\n    //console.log(\"AFTER PSOT CASS\")\n    //console.log(responseData)\n    //console.log(\"HOHOHO PSOT CASS\")\n    \n\n/*\n    const getData = async () => {\n        const dbData = await httpClient.post(\"//localhost:5000/query\", props.query);\n\n        console.log(dbData.data)\n        console.log(dbData.data)\n\n        \n        const returnData = {\"links\":[\n            {\"property\":{\"deleted\":false,\"id\":241,\"type\":\"relationship\"},\"source\":183,\"target\":292},\n            {\"property\":{\"deleted\":false,\"id\":238,\"type\":\"relationship\"},\"source\":183,\"target\":289},\n            {\"property\":{\"deleted\":false,\"id\":240,\"type\":\"relationship\"},\"source\":183,\"target\":291}],\n        \"nodes\":\n            [{\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n            {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n            {\"deleted\":false,\"describe\":\"present and defend opinions by making judgments about information. validity of ideas, or quality of work based on a set of criteria.\",\"id\":292,\"level\":\"IV.Analyzing\",\"outcome\":\"(5) communicate effectively with stakeholders.\",\"outcomeId\":\"5\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n            {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n            {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n            {\"deleted\":false,\"describe\":\"Exhibit memory of previously learned material by recalling facts, terms,basic concepts, and answers.\",\"id\":289,\"level\":\"I.Remembering\",\"outcome\":\"(2) select appropriate data visualisation options; \",\"outcomeId\":\"2\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n            {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n            {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n            {\"deleted\":false,\"describe\":\"Present and defend opinions by making judgments about information, validity of ideas, or quality of work based on a set of criteria.\",\"id\":291,\"level\":\"V. Evaluating\",\"outcome\":\"(4) critically assess the outcomes of a data analysis; \",\"outcomeId\":\"4\",\"type\":\"node\",\"unitCode\":\"CITS4009\"}]\n        }\n\n        //data = JSON.parse(JSON.stringify(returnData));\n        //console.log(\"__DEDWC_++\")\n        //console.log(typeof(data.nodes))\n        //console.log(data.nodes)\n\n        return (\n            {\"links\":[\n                {\"property\":{\"deleted\":false,\"id\":241,\"type\":\"relationship\"},\"source\":183,\"target\":292},\n                {\"property\":{\"deleted\":false,\"id\":238,\"type\":\"relationship\"},\"source\":183,\"target\":289},\n                {\"property\":{\"deleted\":false,\"id\":240,\"type\":\"relationship\"},\"source\":183,\"target\":291}],\n            \"nodes\":\n                [{\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                {\"deleted\":false,\"describe\":\"present and defend opinions by making judgments about information. validity of ideas, or quality of work based on a set of criteria.\",\"id\":292,\"level\":\"IV.Analyzing\",\"outcome\":\"(5) communicate effectively with stakeholders.\",\"outcomeId\":\"5\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                {\"deleted\":false,\"describe\":\"Exhibit memory of previously learned material by recalling facts, terms,basic concepts, and answers.\",\"id\":289,\"level\":\"I.Remembering\",\"outcome\":\"(2) select appropriate data visualisation options; \",\"outcomeId\":\"2\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                {\"availabilities\":\"Semester 2 2021, Crawley (Face to face); Semester 2 2021, Crawley (Online-TT) [Contact hours: n/a];\",\"credit\":6,\"deleted\":false,\"id\":183,\"programmingBased\":true,\"title\":\"Computational Data Analysis\",\"type\":\"node\",\"unitCode\":\"CITS4009\"},\n                {\"deleted\":false,\"describe\":\"Present and defend opinions by making judgments about information, validity of ideas, or quality of work based on a set of criteria.\",\"id\":291,\"level\":\"V. Evaluating\",\"outcome\":\"(4) critically assess the outcomes of a data analysis; \",\"outcomeId\":\"4\",\"type\":\"node\",\"unitCode\":\"CITS4009\"}]\n            })\n        } \n*/\n\n\n    const NodeRead = () => {\n        console.log(data.nodes)\n        console.log(data.nodes.length)\n        console.log(data.nodes[0].id)\n        var unitnode = searchforNode(currentId)\n        console.log(unitnode)\n        //for \n        return ( \n            <div>\n                <p>NODE READ</p>\n                <p>{unitnode.unitCode}</p>\n                <p>{unitnode.avaliabilities}</p>\n                <button onClick= {n => setFilterActive(\"NodeUpdate\")}>Update</button>\n                <button>Delete</button>\n            </div>\n        );\n    }\n    const NodeUpdate = () => {\n\n\n        return ( \n            <div>\n            <p>UPDATE</p>\n            <button>Node Delete</button>\n            </div>\n        );\n    }\n\n\n    const LinkRead = () => {\n        console.log(data.links)\n        console.log(\"1111\"+currentId)\n        console.log(data.links[0].property.id)\n        var unitlink = searchforLink(currentId)\n        console.log(\"got it:\")\n        console.log(unitlink)\n        console.log(\"got it link id:\")\n        console.log(unitlink.property.id)\n        console.log(\"got it source id:\")\n        console.log(unitlink.source.id)\n        return ( \n            <div>\n                <p>LINK READ</p>\n                <p>Link Id: {unitlink.property.id}</p>\n\n\n\n                <p>Source Unit Code: {unitlink.source.unitCode}</p>\n                <p>Target Unit Code: {unitlink.target.unitCode}</p>\n                <button onClick= {n => setFilterActive(\"LinkUpdate\")}>Update</button>\n                <button>Delete</button>\n            </div>\n        );\n    }\n\n    function sendLinkUpdate(source, target){\n        console.log(\"source\")\n        console.log(source)\n        console.log(\"target\")\n        console.log(target)\n    }\n\n    function deleteLink(id){\n        console.log(\"please delete\")\n        console.log(id)\n    }\n    \n    const LinkUpdate = () => {\n        var unitlink = searchforLink(currentId)\n\n        const [sourceDetails, setSourceDetails] = useState(unitlink.source)\n        const [targetDetails, setTargetDetails] = useState(unitlink.target)\n        console.log(\"sourceDetails\")\n        console.log(sourceDetails)\n        console.log(\"targetDetails\")\n        console.log(targetDetails)\n        //console.log(linkDetails)\n\n        \n\n       //function updateInput(value){\n       //   console.log(linkDetails)\n\n        // }\n\n        return ( \n            <div>\n                <p>LINK UPDATE</p>\n\n                <label>\n                source id:\n                <input type=\"text\" value={sourceDetails.id} onChange={(e)=> setSourceDetails({ ...sourceDetails, id: e.target.value })} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" onClick={sendLinkUpdate(sourceDetails, targetDetails)}/>\n                <input type=\"submit\" value=\"Delete\" onClick={deleteLink(currentId)}/>\n\n     \n\n            </div>\n        );\n    }\n\n    const Create = () => {\n        return ( \n            <div>\n                <p>CREATE</p>\n                <button onClick= {n => setFilterActive(\"NodeCreate\")}>Create Node</button>\n                <button onClick= {n => setFilterActive(\"LinkCreate\")}>Create Link</button>\n            </div>\n        );\n    }\n\n    function handleNodeClick(node){\n        console.log(node.id)\n        console.log(typeof(node.id))\n        console.log(data.nodes.length)\n        //setFilterActive({ ...filterActive, state:\"NodeRead\",id: node.id });\n        currentId = node.id\n        setFilterActive(\"NodeRead\");\n    }\n\n    function handleLinkClick(link){\n        console.log(\"clicked on:\" + link)\n        console.log(typeof(link.property.id))\n        console.log(data.links.length)\n        //setFilterActive({ ...filterActive, state:\"NodeRead\",id: node.id });\n        currentId = link.property.id\n        console.log(\"current currentid = \" + link.property.id)\n\n        setFilterActive(\"LinkRead\");\n    }\n\n    function handleBackgroundClick(item){\n        setFilterActive(\"Create\");\n    }\n\n\n\n    return ( \n        <div>\n        \n        {filterActive === \"NodeRead\" && <NodeRead />}\n        {filterActive === \"LinkRead\" && <LinkRead />}\n        {filterActive === \"Create\" && <Create/>}\n\n        {filterActive ===  \"NodeUpdate\" && <NodeUpdate/>}\n        {filterActive ===  \"NodeCreate\" && <NodeCreate/>}\n        {filterActive ===  \"LinkUpdate\" && <LinkUpdate/>}\n        {filterActive ===  \"LinkCreate\" && <LinkCreate/>}\n\n        <ForceGraph2D\n            graphData={data}\n    \n            width = {window.innerWidth*0.6}\n            height = {window.innerHeight*0.8}\n    \n            backgroundColor=\"grey\"\n    \n            onNodeDragEnd={node => {\n                node.fx = node.x;\n                node.fy = node.y;\n                node.fz = node.z;\n            }}\n    \n            cooldownTicks={100}\n            onEngineStop={() => forceRef.current.zoomToFit(400)}\n    \n            //nodeLabel={n => nodeHoverFunc(n)}\n            onNodeClick = {node => handleNodeClick(node)}\n            onLinkClick = {link => handleLinkClick(link)}\n            onBackgroundClick = {i => handleBackgroundClick(i)}\n            //onNodeRightClick={()=> setActive(\"NodeUpdate\")}\n    \n            //onLinkClick={()=> setActive(\"LinkRead\")}\n            //onLinkRightClick={()=> setActive(\"LinkUpdate\")}\n            \n            //onBackgroundClick={b => backgroundClickFunc(b)}\n    \n            linkCurvature=\"curvature\"\n            enablePointerInteraction={true}\n            linkDirectionalParticleWidth={1}\n    \n            ref={forceRef}\n            />\n\n        </div>\n    );\n}\n\nexport default GraphComponent;\n\n//{receivedData === \"haveData\" && <AddGraph inputs = {gotData}/>}\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAoD,OAApD;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CAEA;;AACA,SAAQC,UAAR,QAAyB,eAAzB,C,CAEA;;AACA,SAAQC,UAAR,QAAyB,eAAzB;AAEA,IAAIC,SAAJ;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAY;EAAA,IAAVC,IAAU,QAAVA,IAAU;;EAE/B,SAASC,aAAT,CAAuBC,QAAvB,EAAgC;IACpB,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,IAAI,CAACI,KAAL,CAAWC,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;MACnC,IAAGH,IAAI,CAACI,KAAL,CAAWD,CAAX,EAAcG,EAAd,KAAqBJ,QAAxB,EAAkC;QAC9B,OAAOF,IAAI,CAACI,KAAL,CAAWD,CAAX,CAAP;MACH;IACA;EAChB;;EAGD,SAASI,aAAT,CAAuBL,QAAvB,EAAgC;IAC5B,KAAI,IAAIM,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACR,IAAI,CAACS,KAAL,CAAWJ,MAA1B,EAAkCG,CAAC,EAAnC,EAAuC;MACnCE,OAAO,CAACC,GAAR,CAAY,0BAA0BH,CAAtC;;MACA,IAAGR,IAAI,CAACS,KAAL,CAAWD,CAAX,EAAcI,QAAd,CAAuBN,EAAvB,KAA8BJ,QAAjC,EAA2C;QACvCQ,OAAO,CAACC,GAAR,CAAY,UAAUX,IAAI,CAACS,KAAL,CAAWD,CAAX,EAAcI,QAAd,CAAuBN,EAA7C;QACA,OAAON,IAAI,CAACS,KAAL,CAAWD,CAAX,CAAP;MACH;IACA;EACR;;EAnB8B,gBAsBShB,QAAQ,CAAC,MAAD,CAtBjB;EAAA;EAAA,IAsBxBqB,YAtBwB;EAAA,IAsBVC,eAtBU,kBAuB/B;EACA;;;EAEAJ,OAAO,CAACC,GAAR,CAAY,aAAZ;EACAD,OAAO,CAACC,GAAR,CAAYX,IAAZ;EAEA,IAAMe,QAAQ,GAAGzB,MAAM,CAAC,IAAD,CAAvB;EAEAC,SAAS,CAAC,YAAM;IACZwB,QAAQ,CAACC,OAAT,CAAiBC,OAAjB,CAAyB,QAAzB,EAAmCC,QAAnC,CAA4C,CAAC,GAA7C;EACH,CAFQ,CAAT,CA/B+B,CAoC/B;;EACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACnBT,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACI,KAAjB;IACAM,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACI,KAAL,CAAWC,MAAvB;IACAK,OAAO,CAACC,GAAR,C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"},"metadata":{},"sourceType":"module"}