{"ast":null,"code":"var _jsxFileName = \"/Users/gbbowen/Documents/GitHub/Combined-Front&Back/client/src/templates/login.jsx\",\n    _s = $RefreshSig$();\n\nimport httpClient from \"./httpClient.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const logInUser = async () => {\n    console.log(email, password);\n\n    try {\n      const response = await httpClient.post(\"//localhost:5000/login\", {\n        email,\n        password\n      });\n    } catch (error) {\n      if (error.response.status === 401) {\n        alert(\"Invalid credentials\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => logInUser(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["httpClient","React","useState","Login","email","setEmail","password","setPassword","logInUser","console","log","response","post","error","status","alert","e","target","value"],"sources":["/Users/gbbowen/Documents/GitHub/Combined-Front&Back/client/src/templates/login.jsx"],"sourcesContent":["\nimport httpClient from \"./httpClient.js\";\nimport React, { useState } from \"react\";\n\n\nfunction Login () {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    \n    const logInUser = async () => {\n        console.log(email, password);\n    \n        try {\n            const response = await httpClient.post(\"//localhost:5000/login\", {\n              email,\n              password,\n            });\n      \n          } catch (error) {\n            if (error.response.status === 401) {\n              alert(\"Invalid credentials\");\n            }\n          }\n        };\n\n    return (\n    <div className=\"login\">\n\n                <h1>Log In</h1>\n                <form>\n                    <div>\n                    \n                    <label>Email: </label>\n                    <input type = \"text\" value={email} onChange={(e)=> setEmail(e.target.value)}/>\n                    </div>\n                <div>\n                    <label>Password: </label>\n                    <input type = \"text\" value={password} onChange={(e)=> setPassword(e.target.value)}/>\n                </div>\n                <button type=\"button\" onClick={() => logInUser()}>Submit</button>\n                </form>\n\n    </div>\n    );\n}\n\nexport default Login;"],"mappings":";;;AACA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,KAAT,GAAkB;EAAA;;EACd,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMM,SAAS,GAAG,YAAY;IAC1BC,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBE,QAAnB;;IAEA,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMX,UAAU,CAACY,IAAX,CAAgB,wBAAhB,EAA0C;QAC/DR,KAD+D;QAE/DE;MAF+D,CAA1C,CAAvB;IAKD,CANH,CAMI,OAAOO,KAAP,EAAc;MACd,IAAIA,KAAK,CAACF,QAAN,CAAeG,MAAf,KAA0B,GAA9B,EAAmC;QACjCC,KAAK,CAAC,qBAAD,CAAL;MACD;IACF;EACF,CAdL;;EAgBA,oBACA;IAAK,SAAS,EAAC,OAAf;IAAA,wBAEY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFZ,eAGY;MAAA,wBACI;QAAA,wBAEA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFA,eAGA;UAAO,IAAI,EAAG,MAAd;UAAqB,KAAK,EAAEX,KAA5B;UAAmC,QAAQ,EAAGY,CAAD,IAAMX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;QAA3D;UAAA;UAAA;UAAA;QAAA,QAHA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAMA;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAG,MAAd;UAAqB,KAAK,EAAEZ,QAA5B;UAAsC,QAAQ,EAAGU,CAAD,IAAMT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;QAAjE;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QANA,eAUA;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAE,MAAMV,SAAS,EAA9C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAmBH;;GAvCQL,K;;KAAAA,K;AAyCT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}